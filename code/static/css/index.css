body {
background-color: #ebeceb;
font-family: 'Roboto', sans-serif;
}

img {
width: 80%;
height: 80%;
display: block;
margin: auto;
margin-bottom: 10%;
}

label {
margin-bottom: 10px;
}

input[type="radio"] {
margin-right: 5px;
}

form {
margin-bottom: 20px;
}

#urlForm {
display: none;
}

#content {
font-weight: bold;
}

#additionalContent {
display: none;
margin-top: 20px;
}

#additionalContent p {
color: #27ae60;
}

/*Styling for Select Box*/
/* font-face */
@font-face {
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu4mxP.ttf) format('truetype');
}


.selected-item {
margin: 20px 0;
}
/* custom select style */
.cusSelBlock {
height: 50px;
min-width: 250px;
}
#source {
height: 100%;
width: 100%;
}
.s-hidden {
visibility: hidden;
}
.cusSelBlock {
display: inline-block;
position: relative;
perspective: 800px;
}
.selectLabel {
position: absolute;
left: 0;
top: 0;
z-index: 9999;
background-color: #fff;
border: 1px solid #333;
box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
color: #333;
cursor: pointer;
display: block;
height: 100%;
width: 100%;
letter-spacing: 2px;
line-height: 50px;
padding: 0 50px 0 20px;
text-align: left;
transform-style: preserve-3d; transform-origin: 50% 0%; transition: transform 300ms;
-webkit-backface-visibility: hidden; -webkit-touch-callout: none; -webkit-user-select: none;
-moz-user-select: none; -ms-user-select: none;
user-select: none;
}

.selectLabel:after {
content: '\25BC';
border-left: 1px solid #333;
color: #333;
font-size: 12px;
line-height: 17px;
padding: 10px;
text-align: center; position: absolute;
right: 0px; top: 15%; height: 70%; width: 50px;
}

.selectLabel:active { transform: rotateX(30deg); }
.selectLabel:active:after { content: '\25B2'; }
.selectLabel.active:after { content: '\25B2'; }
::-webkit-scrollbar { display: none; }

.options {
position: absolute;
top: 50px;
height: 1px;
width: 100%;
}
.options li {
background-color: #ffffff;
border-left: 1px solid #333; border-right: 1px solid #333; border-bottom: 1px solid #333;
cursor: pointer;
display: block;
line-height: 50px; list-style: none;
opacity: 1;
padding: 0 50px 0 20px;
text-align: left;
transition: transform 300ms ease;
position: absolute;
top: -50px;
left: 0;
z-index: 0;
height: 50px;
width: 100%;
}
.options li:hover,
.options li.active {
background-color: #333;
color: #fff;
}
.options li:nth-child(1) {
transform: translateY(2px);
z-index: 6;
}
.options li:nth-child(2) {
transform: translateY(4px);z-index: 5;}
.options li:nth-child(3) {z-index: 4;}
.options li:nth-child(4) {z-index: 3;}
.options li:nth-child(5) {z-index: 2;}
.options li:nth-child(6) { z-index: 1;}

.source-selected
{
color:mediumseagreen;
}

/*
get rid of the fieldset styling and keep
this all on a single line
*/
.radio-switch {
border: none;
padding: 0;
white-space: nowrap;
}

/*
radio button groups often benefit from a legend to
provide context as to what the different
options pertain to. Ideally this would be visible to all
users, but you know...
*/
.radio-switch legend {
font-size: 2px;
opacity: 0;
position: absolute;
}

/*
relative labels to help position the pseudo elements
the z-index will be handy later, when the labels that
overlap the visual switch UI need to be adjusted
to allow for a user to toggle the switch without
having to move their mouse/finger to the different
sides of the UI
*/
.radio-switch label {
display: inline-block;
line-height: 2;
position: relative;
z-index: 2;
}

/*
inputs set to opcacity 0 are still accessible.
Apparently there can be issues targetting inputs with
Dragon speech recognition software if you use the typical
'visually-hidden' class...so might as well just avoid that issue...
*/
.radio-switch input {
opacity: 0;
position: absolute;
}

/*
a 2 option toggle can only have 2 options...so instead of
adding more classes, i'm just going to use some
structural pseudo-classes to target them...
cause why let all that good work go to waste?!

the large padding is used to position the labels
on top of the visual UI, so the switch UI itself
can be mouse clicked or finger tapped to toggle
the current option
*/
.radio-switch label:first-of-type {
padding-right: 5em;
}

.radio-switch label:last-child {
margin-left: -4.25em;
padding-left: 5em;
}

/*
oh focus within, I can't wait for you to have even more support.
But you'll never be in IE11, so we're going to need a
polyfill for you for a bit...
*/
.radio-switch:focus-within label:first-of-type:after {
box-shadow: 0 0 0 2px #fff, 0 0 0 4px #2196f3;
}

/* polyfill class*/
.radio-switch.focus-within label:first-of-type:after {
box-shadow: 0 0 0 2px #fff, 0 0 0 4px #2196f3;
}

/* making the switch UI.  */
.radio-switch label:first-of-type:before,
.radio-switch label:first-of-type:after {
border: 1px solid #aaa;
content: "";
height: 2em;
overflow: hidden;
pointer-events: none;
position: absolute;
vertical-align: middle;
}

.radio-switch label:first-of-type:before {
background: #fff;
border: 1px solid #aaa;
border-radius: 100%;
position: absolute;
right: -.075em;
transform: translateX(0em);
transition: transform .2s ease-in-out;
width: 2em;
z-index: 2;
}

.radio-switch label:first-of-type:after {
background: #e73c7e;
border-radius: 1em;
margin: 0 1em;
transition: background .2s ease-in-out;
width: 4em;
}

.form-check-input:hover {
cursor: pointer;
}
/*
Visually change the switch UI to match the
checked state of the first radio button
*/
.radio-switch input:first-of-type:checked ~ label:first-of-type:after {
background: #2196f3;
}

.radio-switch input:first-of-type:checked ~ label:first-of-type:before {
transform: translateX(-2em);
}

/* Move the 2nd label to have a lower z-index, so when that
option is toggled, the first label will overlay on top of the
Switch ui, and the switch can be pressed again to toggle back
to the prevoius state. */
.radio-switch input:last-of-type:checked ~ label:last-of-type {
z-index: 1;
}



/*
system defaut fonts sure do load quick...
*/

body {
color: whitesmoke;
font-size: 16px;
background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
background-size: 400% 400%;
animation: gradient 15s ease infinite;
height: 100vh;
}

@keyframes gradient {
0% {
background-position: 0% 50%;
}
50% {
background-position: 100% 50%;
}
100% {
background-position: 0% 50%;
}
}

.container {
    display: flex;
    flex-direction: column; /* or row, depending on your desired layout */
    align-items: center; /* Centers items horizontally */
    justify-content: center; /* Centers items vertically */
    margin: 10px auto;
    max-width: 400px;
    text-align: center;
    }

/* Adjust styles for responsiveness */
@media (max-width: 768px) {
body
{
    padding: 0px;
    margin: 0px;
}
img{
   width: 60%;
   height: 60%;
}
.container{
    max-width: 300px;
}

}
